name: Flipkart Regression CI

on:
  workflow_dispatch:
    inputs:
      MAVEN_COMMAND:
        description: "Maven command (e.g. mvn clean test -DsuiteXmlFile=testng.xml)"
        required: false
        default: "mvn clean test"
  schedule:
    - cron: "0 2 * * *" # every day at 2AM UTC

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write     # ✅ required for gh-pages deployment
      pages: write        # ✅ required for Pages
      id-token: write     # ✅ required for OIDC authentication

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Cache Maven Packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Run Tests with Maven (with retry)
        run: |
          set -e
          for i in 1 2 3; do
            echo "Attempt #$i"
            ${{ github.event.inputs.MAVEN_COMMAND || 'mvn clean test' }} && break || sleep 10
          done

      - name: Generate Allure Report
        if: always()
        run: |
          sudo apt-get update && sudo apt-get install -y unzip wget
          wget -q https://github.com/allure-framework/allure2/releases/download/2.22.1/allure-2.22.1.zip -O /tmp/allure.zip
          unzip -q /tmp/allure.zip -d /tmp/
          /tmp/allure-2.22.1/bin/allure generate target/allure-results -o target/allure-report || true

      - name: Upload Allure Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report

      - name: Deploy Allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/allure-report
          destination_dir: ${{ github.run_number }}

  send-email:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare Email Content
        id: prep
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.run_number }}/"
          echo "REPORT_URL=$REPORT_URL" >> $GITHUB_ENV

          STATUS="${{ needs.test.result }}"
          if [ "$STATUS" = "success" ]; then
            COLOR="green"
          else
            COLOR="red"
          fi

          cat <<EOF > email.html
          <h2>Flipkart Regression - Run #${{ github.run_number }}</h2>
          <p>Status: <b style="color:$COLOR">$STATUS</b></p>
          <p>Allure Report: <a href="$REPORT_URL">$REPORT_URL</a></p>
          <p>GitHub Run: <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}</a></p>
          EOF

      - name: Send notification email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Flipkart Regression - Run #${{ github.run_number }}"
          to: ${{ secrets.REPORT_TO }}
          from: ${{ secrets.SMTP_USERNAME }}
          html_body: file://email.html

  cleanup:
    needs: [test, send-email]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Cleanup workspace
        run: |
          echo "Cleaning up workspace..."
          rm -rf ${{ github.workspace }}
