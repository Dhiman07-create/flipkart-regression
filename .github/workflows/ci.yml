name: Flipkart Regression CI

on:
  workflow_dispatch:
    inputs:
      MAVEN_COMMAND:
        description: "Maven command to run"
        required: false
        default: "mvn clean test -Dsurefire.suiteXmlFiles=testng.xml"

  schedule:
    - cron: "0 2 * * *" # every day at 2AM UTC

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write     # ‚úÖ required for gh-pages deployment
      pages: write        # ‚úÖ required for Pages
      id-token: write     # ‚úÖ required for OIDC authentication

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Cache Maven Packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Run Tests with Maven (with retry)
        run: |
          set -e
          for i in 1 2 3; do
            echo "Attempt #$i"
            ${{ github.event.inputs.MAVEN_COMMAND || 'mvn clean test' }} && break || sleep 10
          done

      - name: Generate Allure Report
        if: always()
        run: |
          sudo apt-get update && sudo apt-get install -y unzip wget
          wget -q https://github.com/allure-framework/allure2/releases/download/2.22.1/allure-2.22.1.zip -O /tmp/allure.zip
          unzip -q /tmp/allure.zip -d /tmp/
          /tmp/allure-2.22.1/bin/allure generate target/allure-results -o target/allure-report || true

      - name: Extract Allure summary stats
        if: always()
        run: |
          SUMMARY_FILE="target/allure-report/widgets/summary.json"
          if [ -f "$SUMMARY_FILE" ]; then
            PASSED=$(jq '.statistic.passed' $SUMMARY_FILE)
            FAILED=$(jq '.statistic.failed' $SUMMARY_FILE)
            SKIPPED=$(jq '.statistic.skipped' $SUMMARY_FILE)
            BROKEN=$(jq '.statistic.broken' $SUMMARY_FILE)
            TOTAL=$(jq '.statistic.total' $SUMMARY_FILE)
            DURATION=$(jq '.time.duration' $SUMMARY_FILE)

            echo "PASSED=$PASSED" >> $GITHUB_ENV
            echo "FAILED=$FAILED" >> $GITHUB_ENV
            echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV
            echo "BROKEN=$BROKEN" >> $GITHUB_ENV
            echo "TOTAL_SCENARIOS=$TOTAL" >> $GITHUB_ENV
            echo "DURATION=$DURATION ms" >> $GITHUB_ENV
          else
            echo "summary.json not found!"
            echo "PASSED=0" >> $GITHUB_ENV
            echo "FAILED=0" >> $GITHUB_ENV
            echo "SKIPPED=0" >> $GITHUB_ENV
            echo "BROKEN=0" >> $GITHUB_ENV
            echo "TOTAL_SCENARIOS=0" >> $GITHUB_ENV
            echo "DURATION=N/A" >> $GITHUB_ENV
          fi

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Upload Allure Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report

      - name: Deploy Allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/allure-report
          destination_dir: ${{ github.run_number }}

  send-email:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate Email Body
        id: generate-email-body
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.run_number }}/"
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          EMAIL_BODY=$(cat <<EOF
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>Test Summary Report</title>
          </head>
          <body style="font-family: Arial, sans-serif; background:#f7f9fc; padding:20px;">
            <h2 style="color:#2c3e50;">Flipkart Regression - Run #${{ github.run_number }}</h2>

            <div style="display:flex;gap:20px;">
              <div>
                <img src="https://quickchart.io/chart?c={
                  type:'doughnut',
                  data:{
                    labels:['Passed','Failed','Skipped','Broken'],
                    datasets:[{
                      data:[${{ env.PASSED || 0 }},${{ env.FAILED || 0 }},${{ env.SKIPPED || 0 }},${{ env.BROKEN || 0 }}],
                      backgroundColor:['#97cc64','#fd5a3e','#aaa','#ffd050']
                    }]
                  }
                }" width="300">
              </div>

              <div style="background:#fff;padding:15px;border:1px solid #ddd;border-radius:8px;">
                <p><b>Total Scenarios:</b> $TOTAL_SCENARIOS</p>
                <p>‚úÖ <b>Passed:</b> $PASSED</p>
                <p>‚ùå <b>Failed:</b> $FAILED</p>
                <p>‚è∏Ô∏è <b>Skipped:</b> $SKIPPED</p>
                <p>üêõ <b>Broken:</b> $BROKEN</p>
                <p>üåê <b>Environment:</b> ${ENVIRONMENT:-DEV}</p>
                <p>üïí <b>Test Duration:</b> $DURATION</p>
              </div>
            </div>

            <hr style="margin:20px 0;">

            <div style="text-align:center;">
              <a href="$REPORT_URL" style="background:#3498db;color:#fff;padding:12px 24px;text-decoration:none;border-radius:5px;margin:0 10px;">View Full Report</a>
              <a href="$RUN_URL" style="background:#2ecc71;color:#fff;padding:12px 24px;text-decoration:none;border-radius:5px;margin:0 10px;">GitHub Action Run</a>
            </div>

            <div style="margin-top:30px;font-size:12px;color:#888;text-align:center;">
              <p>&copy; 2025 Flipkart Regression Automation</p>
            </div>
          </body>
          </html>
          EOF
          )

          echo "EMAIL_BODY<<EOF" >> $GITHUB_ENV
          echo "$EMAIL_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

        env:
          PASSED: ${{ env.PASSED }}
          FAILED: ${{ env.FAILED }}
          SKIPPED: ${{ env.SKIPPED }}
          BROKEN: ${{ env.BROKEN }}
          TOTAL_SCENARIOS: ${{ env.TOTAL_SCENARIOS }}
          DURATION: ${{ env.DURATION }}
          ENVIRONMENT: ${{ inputs.ENV }}

      - name: Debug Email Body
        run: |
            echo "------ EMAIL_BODY START ------"
            echo "${EMAIL_BODY}" | head -20
            echo "------ EMAIL_BODY END ------"
        env:
            EMAIL_BODY: ${{ env.EMAIL_BODY }}

      - name: Send notification email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Flipkart Regression - Run #${{ github.run_number }}"
          to: ${{ secrets.REPORT_TO }}
          from: ${{ secrets.SMTP_USERNAME }}
          content_type: text/html
          html_body: ${{ env.EMAIL_BODY }}

  cleanup:
    needs: [test, send-email]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Cleanup workspace
        run: |
          echo "Cleaning up workspace..."
          rm -rf ${{ github.workspace }}
